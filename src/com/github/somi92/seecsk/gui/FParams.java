/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.github.somi92.seecsk.gui;

import com.github.somi92.seecsk.util.Config;
import com.github.somi92.seecsk.util.Constants;
import com.github.somi92.sqldbb.broker.DBBroker;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author milos
 */
public class FParams extends javax.swing.JDialog {

    private String[] values;
    
    /**
     * Creates new form FParams
     */
    public FParams(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initForm();
        values = new String[7];
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxtPort = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jcmbServer = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jtxtDriver = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtxtIP = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtxtBazaPort = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtxtImeBaze = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtxtKorisnik = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jpswSifra = new javax.swing.JPasswordField();
        jbtnTest = new javax.swing.JButton();
        jbtnPokreni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Port za osluškivanje:");

        jtxtPort.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jtxtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Parametri baze podataka"));

        jLabel2.setText("Server baze podataka:");

        jcmbServer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MySQL", "MS Access", "SQL Server", "Oracle" }));

        jLabel3.setText("Driver baze podataka:");

        jLabel4.setText("IP adresa:");

        jLabel5.setText("Port:");

        jLabel6.setText("Ime baze podataka:");

        jLabel7.setText("Korisnik:");

        jLabel8.setText("Šifra:");

        jbtnTest.setText("Testiraj konekciju");
        jbtnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbtnTest, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(jcmbServer, 0, 162, Short.MAX_VALUE)
                    .addComponent(jtxtDriver)
                    .addComponent(jtxtIP)
                    .addComponent(jtxtBazaPort)
                    .addComponent(jtxtImeBaze)
                    .addComponent(jtxtKorisnik)
                    .addComponent(jpswSifra))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcmbServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtxtIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtxtBazaPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtxtImeBaze, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtxtKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jpswSifra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 24, Short.MAX_VALUE)
                .addComponent(jbtnTest)
                .addContainerGap())
        );

        jbtnPokreni.setText("Pokreni");
        jbtnPokreni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPokreniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbtnPokreni, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnPokreni, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnPokreniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPokreniActionPerformed
        try {
            testDatabaseConnectivity();
            storeConfig();
            dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Podešavanja nisu pravilna: "+ex.getMessage(),
                    "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnPokreniActionPerformed

    private void jbtnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTestActionPerformed
        try {
            testDatabaseConnectivity();
            JOptionPane.showMessageDialog(this, "Konekcija uspešna.", "Baza podataka", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može uspostaviti vezu sa bazom podataka: "+ex.getMessage(),
                    "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnTestActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jbtnPokreni;
    private javax.swing.JButton jbtnTest;
    private javax.swing.JComboBox jcmbServer;
    private javax.swing.JPasswordField jpswSifra;
    private javax.swing.JTextField jtxtBazaPort;
    private javax.swing.JTextField jtxtDriver;
    private javax.swing.JTextField jtxtIP;
    private javax.swing.JTextField jtxtImeBaze;
    private javax.swing.JTextField jtxtKorisnik;
    private javax.swing.JTextField jtxtPort;
    // End of variables declaration//GEN-END:variables

    private void storeConfig() {
        String port = jtxtPort.getText().trim();
        String dbServer = "";
        if(jcmbServer.getSelectedIndex()==0) {
            dbServer = "mysql";
        }
        if(jcmbServer.getSelectedIndex()==1) {
            dbServer = "access";
        }
        if(jcmbServer.getSelectedIndex()==2) {
            dbServer = "sqlserver";
        }
        if(jcmbServer.getSelectedIndex()==3) {
            dbServer = "oracle";
        }
        String driver = jtxtDriver.getText().trim();
        String ip = jtxtIP.getText().trim();
        String bazaPort = jtxtBazaPort.getText().trim();
        String korisnik = jtxtKorisnik.getText().trim();
        String imeBaza = jtxtImeBaze.getText().trim();
        String password = new String(jpswSifra.getPassword());
        
        Config.vratiInstancu().postaviVrednost(Constants.ServerConfigKeys.SERVER_PORT, port);
        Config.vratiInstancu().postaviVrednost(Constants.DatabaseConfigKeys.DB_SERVER, dbServer);
        Config.vratiInstancu().postaviVrednost(Constants.DatabaseConfigKeys.DB_DRIVER, driver);
        Config.vratiInstancu().postaviVrednost(Constants.DatabaseConfigKeys.DB_HOST, ip);
        Config.vratiInstancu().postaviVrednost(Constants.DatabaseConfigKeys.DB_PORT, bazaPort);
        Config.vratiInstancu().postaviVrednost(Constants.DatabaseConfigKeys.DB_USER, korisnik);
        Config.vratiInstancu().postaviVrednost(Constants.DatabaseConfigKeys.DB_NAME, imeBaza);
        Config.vratiInstancu().postaviVrednost(Constants.DatabaseConfigKeys.DB_PASSWORD, password);
    }
    
    private void testDatabaseConnectivity() throws Exception {
        DBBroker broker = new DBBroker();
        
        String dbServer = "";
        if(jcmbServer.getSelectedIndex()==0) {
            dbServer = "mysql";
        }
        if(jcmbServer.getSelectedIndex()==1) {
            dbServer = "access";
        }
        if(jcmbServer.getSelectedIndex()==2) {
            dbServer = "sqlserver";
        }
        if(jcmbServer.getSelectedIndex()==3) {
            dbServer = "oracle";
        }
        broker.setDatabaseServer(dbServer);
        
        broker.setDatabaseDriver(jtxtDriver.getText().trim());
        broker.setHostPort(jtxtIP.getText().trim()+":"+jtxtBazaPort.getText().trim());
        broker.setDatabase(jtxtImeBaze.getText().trim());
        broker.setUsername(jtxtKorisnik.getText().trim());
        broker.setPassword(new String(jpswSifra.getPassword()));
        
        broker.openDatabaseConnection();
        broker.closeDatabaseConnection();
    }

    private void run() {
        
    }
    
    private void initForm() {
        jtxtPort.setText(Config.vratiInstancu().vratiVrednost(Constants.ServerConfigKeys.SERVER_PORT));
        String dbServer = Config.vratiInstancu().vratiVrednost(Constants.DatabaseConfigKeys.DB_SERVER);
        if(dbServer.equals("mysql")) {
            jcmbServer.setSelectedIndex(0);
        }
        if(dbServer.equals("access")) {
            jcmbServer.setSelectedIndex(1);
        }
        if(dbServer.equals("sqlserver")) {
            jcmbServer.setSelectedIndex(2);
        }
        if(dbServer.equals("oracle")) {
            jcmbServer.setSelectedIndex(3);
        }
        jtxtDriver.setText(Config.vratiInstancu().vratiVrednost(Constants.DatabaseConfigKeys.DB_DRIVER));
        jtxtIP.setText(Config.vratiInstancu().vratiVrednost(Constants.DatabaseConfigKeys.DB_HOST));
        jtxtBazaPort.setText(Config.vratiInstancu().vratiVrednost(Constants.DatabaseConfigKeys.DB_PORT));
        jtxtKorisnik.setText(Config.vratiInstancu().vratiVrednost(Constants.DatabaseConfigKeys.DB_USER));
        jtxtImeBaze.setText(Config.vratiInstancu().vratiVrednost(Constants.DatabaseConfigKeys.DB_USER));
        jpswSifra.setText(Config.vratiInstancu().vratiVrednost(Constants.DatabaseConfigKeys.DB_PASSWORD));
    }
    
}
